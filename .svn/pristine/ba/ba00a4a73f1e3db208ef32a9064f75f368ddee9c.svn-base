<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Register extends CI_Controller {
	public function __construct() {
		parent::__construct();
		
		$this->load->model('register_model');
		$this->load->helper('form');
		$this->load->library('form_validation');
		$this->load->driver('session');

		// Define validation rules
		$this->form_validation->set_rules('ramqId', 'trim|required');
	}
	
	public function index() {
		$data['title'] = 'Clinic - Patient Registration';
		
		$userId = $this->session->userdata('userId');
		
		if(isset($userId)) {
			$data['userId'] = $userId;
		} else {
			// By setting this to empty string, we can avoid having if-statements
			// in the view
			$data['userId'] = '';
		}

		if($this->form_validation->run() == FALSE) {
			// Error, show form again
			$this->load->template('register/register', $data);
		} else {
			// Check the ramq id with the model
			$ramqId = $this->input->post('ramqId');
			if(valid_string($ramqId)) {
				$query = $this->register_model->getUserByRAMQId();
				//var_dump($query);
				if($query) {
					// patient with specified ramqId exists. Load existing
					// patient's information.
					

				} else {
					// patient does not exist. Load new patient registration
					// form.
					
				}
				$this->load->template();
			}
			
		}
	}
	
	public function logout() {
		// Double-check that the user pressed logout button
		if(!empty($this->input->post('logout_submit'))) {
			// User clicked logout. Unset all session variables.
			$this->session->unset_userdata('userId');
			$this->session->unset_userdata('receptionPriv');
			$this->session->unset_userdata('triagePriv');
			$this->session->unset_userdata('nursePriv');
			// Finally, destroy the session.
			$this->session->sess_destroy();
			redirect('login', 'index');
		}
	}
}
?>