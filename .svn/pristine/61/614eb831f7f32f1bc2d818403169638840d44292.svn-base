<?php
class Triage extends CI_Controller {
	private $positionPattern;
	private $positionMax;

	public function __construct() {
		parent::__construct();

		$this->load->helper('form');
		$this->load->model('Patient');
		$this->load->model('Visit');

		$this->positionPattern = array(2, 3, 2, 4, 3, 2, 5, 2, 3, 4);
		$this->positionMax = 10;
	}

	public function index() {
		$data['data'] = array("this is data");
		$this->load->view("triage/triage", $data);		
	}

	public function submitNewPatient() {
		

		$firstName = $this->input->post("firstName");
		$lastName = $this->input->post("lastName");
		$code = $this->input->post("code");

		$data['data'] = array($firstName);
		$this->load->view("triage/triage", $data);	

		$patient = new Patient();
		$patient->setFirstName($firstName);
		$patient->setLastName($lastName);

		$visit = new Visit();
		$visit->setCode($code);

		$this->enqueuePatient($patient, $visit);
	}

	/**
	* 
	*
	* @param patient the Patient model
	*/
	public function enqueuePatient($patient, $visit) {
		if ($visit->getCode() == 1) {
			$this->enqueuePriorityPatient($patient);
		} else {
			$this->enqueueNewPatient($patient);
		}
	}

	/**
	*
	*
	* @return the next Patient
	*/
	public function getNextPatient() {
		
	}

	private function enqueuePriorityPatient($patient) {
		$priorityQueue = $this->getQueue("1");

		$priorityQueue->enqueue($patient);

		$data = array(
			'queue_name'=>'1',
			'queue_content'=>$priorityQueue->serialize()
			);
		$this->db->where('queue_name', '1');
		$this->db->update('queue', $data);
	}

	private function enqueueNewPatient($patient) {

	}

	private function getQueue($name) {
		$queueTable = $this->db->query("SELECT `queue_content` FROM queue WHERE queue_name = " . $name);
		$row = $queueTable->row_array();
		$serializedQueue = $row['queue_content'];
		$unserializedQueue = new SplQueue();
		return $unserializedQueue->unserialize($serializedQueue);
	}
}
?>